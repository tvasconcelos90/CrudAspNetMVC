@model CrudAspNetMVC1N.Models.Cliente

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Cliente</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdConsultor, "IdConsultor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdConsultor", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdConsultor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telefones, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            <button class="btn btn-primary form-control" id="btn-add-telefone">Novo telefone</button>
        </div>
        <div class="col-md-8" id="div-telefones">
            @for (int i = 0; i < Model.Telefones.Count; i++)
            {
                <div class="row">
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.Telefones[i].Id, new {@class = "hid-id"})
                        @Html.EditorFor(model => model.Telefones[i].DDD, new { htmlAttributes = new { @class = "form-control txt-ddd" } })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Telefones[i].Numero, new { htmlAttributes = new { @class = "form-control txt-numero" } })  
                    </div>
                    <div class="col-md-3">
                        @Html.EnumDropDownListFor(model => model.Telefones[i].Tipo, new { @class = "form-control sel-tipo"} )
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-danger btn-remover-telefone" data-id="@Model.Telefones[i].Id">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/edicao-telefones.js"><</script>
}
